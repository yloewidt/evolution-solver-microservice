# Cloud Build configuration for deployment
# This file defines deployment strategies and build configurations

build:
  # Default build configuration
  docker:
    registry: gcr.io
    image_name: evolution-solver
    build_args:
      - NODE_ENV=production
    
  # Build triggers for different environments
  triggers:
    development:
      branch: develop
      included_files:
        - src/**
        - cloud/**
        - package*.json
        - Dockerfile
        - config/**
      substitutions:
        _ENVIRONMENT: development
        _DEPLOY: "true"
    
    staging:
      branch: staging
      included_files:
        - src/**
        - cloud/**
        - package*.json
        - Dockerfile
        - config/**
      substitutions:
        _ENVIRONMENT: staging
        _DEPLOY: "true"
    
    production:
      branch: main
      tag_pattern: "^v[0-9]+\\.[0-9]+\\.[0-9]+$"
      substitutions:
        _ENVIRONMENT: production
        _DEPLOY: "true"

deployment:
  # Deployment strategies
  strategies:
    development:
      type: direct  # Deploy immediately
      
    staging:
      type: canary  # Gradual rollout
      steps:
        - traffic: 10
          verify: true
          duration: 5m
        - traffic: 50
          verify: true
          duration: 10m
        - traffic: 100
      
    production:
      type: blue-green  # Blue-green deployment
      smoke_test: true
      rollback_on_failure: true

  # Pre and post deployment hooks
  hooks:
    pre_deploy:
      - name: validate-config
        command: scripts/validate-config.sh
      - name: run-tests
        command: npm test
        
    post_deploy:
      - name: health-check
        command: scripts/health-check.sh
      - name: notify
        command: scripts/notify-deployment.sh

# Cloud Build specific configuration
cloudbuild:
  options:
    machineType: 'E2_HIGHCPU_8'
    logging: CLOUD_LOGGING_ONLY
    dynamic_substitutions: true
  
  timeout: 1200s  # 20 minutes
  
  secrets:
    - kmsKeyName: projects/evolutionsolver/locations/global/keyRings/evolution-solver/cryptoKeys/api-key
      secretEnv:
        OPENAI_API_KEY: projects/evolutionsolver/secrets/openai-api-key/versions/latest