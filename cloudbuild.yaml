steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/evolution-solver:$SHORT_SHA', '.']
  
  # Tag with additional tags if needed
  - name: 'gcr.io/cloud-builders/docker'
    args: ['tag', 'gcr.io/$PROJECT_ID/evolution-solver:$SHORT_SHA', 'gcr.io/$PROJECT_ID/evolution-solver:${_TAG}']
  
  # Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/evolution-solver:$SHORT_SHA']
  
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/evolution-solver:${_TAG}']
  
  # Optional: Deploy using the new deployment script if _DEPLOY is set to true
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [[ "${_DEPLOY}" == "true" ]]; then
          # Install yq for YAML parsing
          apt-get update && apt-get install -y wget
          wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          chmod +x /usr/local/bin/yq
          
          # Run deployment script
          export IMAGE_TAG=$SHORT_SHA
          ./scripts/deploy ${_ENVIRONMENT} all
        else
          echo "Skipping deployment (_DEPLOY != true)"
        fi
    env:
      - 'PROJECT_ID=$PROJECT_ID'

# Substitution variables with defaults
substitutions:
  _TAG: 'latest'
  _ENVIRONMENT: 'development'
  _DEPLOY: 'false'

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY
  dynamic_substitutions: true

# Build timeout
timeout: '1200s'  # 20 minutes

# Available secrets (configured in Secret Manager)
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/openai-api-key/versions/latest
      env: 'OPENAI_API_KEY'